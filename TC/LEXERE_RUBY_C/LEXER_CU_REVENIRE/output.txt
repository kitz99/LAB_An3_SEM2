+---------------------------+---------------+
| Token_type                | Token_value   |
+---------------------------+---------------+
+---------------------------+---------------+
| LIT - IDENTIFIER          | e12           |
+---------------------------+---------------+
| LIT - STRING              | "*////////*"  |
+---------------------------+---------------+
| OP - MULTIPLY             | *             |
+---------------------------+---------------+
| OP - DIVIDE               | /             |
+---------------------------+---------------+
| LIT - STRING              | "/*lkjlkj'e'" |
+---------------------------+---------------+
| LIT - STRING              | "/*"          |
+---------------------------+---------------+
| OP - MULTIPLY             | *             |
+---------------------------+---------------+
| OP - DIVIDE               | /             |
+---------------------------+---------------+
| OP - DIVIDE               | /             |
+---------------------------+---------------+
| OP - MULTIPLY             | *             |
+---------------------------+---------------+
| OP - MULTIPLY             | *             |
+---------------------------+---------------+
| OP - DIVIDE               | /             |
+---------------------------+---------------+
| KEYWORD_VOID              | void          |
+---------------------------+---------------+
| LIT - IDENTIFIER          | main          |
+---------------------------+---------------+
| OP - L_PARANT             | (             |
+---------------------------+---------------+
| KEYWORD_INT               | int           |
+---------------------------+---------------+
| LIT - IDENTIFIER          | argc          |
+---------------------------+---------------+
| OP - COMMA                | ,             |
+---------------------------+---------------+
| KEYWORD_CHAR              | char          |
+---------------------------+---------------+
| OP - MULTIPLY             | *             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | argv          |
+---------------------------+---------------+
| OP - L_BRACKET            | [             |
+---------------------------+---------------+
| OP - R_BRACKET            | ]             |
+---------------------------+---------------+
| OP - R_PARANT             | )             |
+---------------------------+---------------+
| OP - L_CURLY_BRACKET      | {             |
+---------------------------+---------------+
| LIT - STRING              | "12e-25"      |
+---------------------------+---------------+
| KEYWORD_IF                | if            |
+---------------------------+---------------+
| OP - L_PARANT             | (             |
+---------------------------+---------------+
| OP - L_PARANT             | (             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | e12           |
+---------------------------+---------------+
| OP - PERIOD               | .             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | f             |
+---------------------------+---------------+
| OP - PLUS_PLUS            | ++            |
+---------------------------+---------------+
| OP - ASSIGN_PLUS          | +=            |
+---------------------------+---------------+
| LIT - FLOAT               | 12e-3         |
+---------------------------+---------------+
| OP - ASSIGN_BIT_SHIFT_L   | <<=           |
+---------------------------+---------------+
| LIT - FLOAT               | 12.3e-12      |
+---------------------------+---------------+
| OP - PLUS                 | +             |
+---------------------------+---------------+
| OP - MULTIPLY             | *             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | ab12          |
+---------------------------+---------------+
| OP - PERIOD               | .             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | ef            |
+---------------------------+---------------+
| OP - R_PARANT             | )             |
+---------------------------+---------------+
| OP - AND                  | &&            |
+---------------------------+---------------+
| LIT - IDENTIFIER          | qwe           |
+---------------------------+---------------+
| OP - PERIOD               | .             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | f             |
+---------------------------+---------------+
| OP - PERIOD               | .             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | e             |
+---------------------------+---------------+
| OP - DIVIDE               | /             |
+---------------------------+---------------+
| OP - MULTIPLY             | *             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | f             |
+---------------------------+---------------+
| OP - PLUS_PLUS            | ++            |
+---------------------------+---------------+
| OP - PLUS_PLUS            | ++            |
+---------------------------+---------------+
| OP - PLUS                 | +             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | g             |
+---------------------------+---------------+
| OP - R_PARANT             | )             |
+---------------------------+---------------+
| OP - L_CURLY_BRACKET      | {             |
+---------------------------+---------------+
| OP - SEPARATOR(SEMICOLON) | ;             |
+---------------------------+---------------+
| OP - R_CURLY_BRACKET      | }             |
+---------------------------+---------------+
| LIT - CHAR                | '0'           |
+---------------------------+---------------+
| OP - SEPARATOR(SEMICOLON) | ;             |
+---------------------------+---------------+
| LIT - IDENTIFIER          | f             |
+---------------------------+---------------+
| OP - L_PARANT             | (             |
+---------------------------+---------------+
| OP - R_PARANT             | )             |
+---------------------------+---------------+
| OP - SEPARATOR(SEMICOLON) | ;             |
+---------------------------+---------------+
| LIT - STRING              | "anaaremere"  |
+---------------------------+---------------+
| KEYWORD_RETURN            | return        |
+---------------------------+---------------+
| LIT - INT                 | 0             |
+---------------------------+---------------+
| OP - SEPARATOR(SEMICOLON) | ;             |
+---------------------------+---------------+
| OP - R_CURLY_BRACKET      | }             |
+---------------------------+---------------+
| LIT - STRING              | "as"          |
+---------------------------+---------------+
